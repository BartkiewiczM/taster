openapi: 3.0.0
info:
  title: Taster API
  version: "1.0.0"

paths:
  /api/v1/signup:
    post:
      summary: User signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_v1_user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
                    password_confirmation:
                      type: string
              required: [api_v1_user]
      responses:
        '200':
          description: Signed up successfully
        '422':
          description: Validation error

  /api/v1/login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                api_v1_user:
                  type: object
                  properties:
                    email:
                      type: string
                    password:
                      type: string
      responses:
        '200':
          description: Logged in successfully
        '401':
          description: Unauthorized

  /api/v1/logout:
    delete:
      summary: User logout
      responses:
        '204':
          description: Logged out

  /api/v1/meals/random:
    get:
      summary: Get random meal
      parameters:
        - in: query
          name: category
          schema:
            type: string
          required: false
          description: Category to filter meals
      responses:
        '200':
          description: Random meal
        '404':
          description: Not found
    /api/v1/meals/{id}:
    get:
      summary: Get saved meal by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: ID of the saved meal (internal ID)
      responses:
        '200':
          description: Found meal
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  category:
                    type: string
                  recipe:
                    type: string
                  ingredients:
                    type: array
                    items:
                      type: string
                  image_url:
                    type: string
                  external_api_id:
                    type: string
        '404':
          description: Meal not found

  /api/v1/meal_histories:
    get:
      summary: Get user's meal histories
      parameters:
        - in: query
          name: favourite
          schema:
            type: boolean
          required: false
          description: Filter to return only favourite meal histories
      responses:
        '200':
          description: List of meal histories
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    meal_id:
                      type: string
                    name:
                      type: string
                    category:
                      type: string
                    image_url:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    favorite:
                      type: boolean
                    rating:
                      type: integer
        '404':
          description: No meal history found

  /api/v1/meal_histories/{id}:
    patch:
      summary: Update meal history (favourite or rating)
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
          description: Meal history ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                meal_history:
                  type: object
                  properties:
                    favourite:
                      type: boolean
                    rating:
                      type: integer
      responses:
        '200':
          description: Updated meal history
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  meal_id:
                    type: string
                  name:
                    type: string
                  category:
                    type: string
                  image_url:
                    type: string
                  created_at:
                    type: string
                    format: date-time
                  favorite:
                    type: boolean
                  rating:
                    type: integer
        '404':
          description: Meal history not found
        '422':
          description: Validation failed
